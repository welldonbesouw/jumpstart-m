#### Stage 1: Build the application
FROM eclipse-temurin:17-jdk-alpine as build

EXPOSE 8080

WORKDIR /app

COPY mvnw .
COPY .mvn .mvn

COPY pom.xml .

RUN ./mvnw dependency:go-offline -B

COPY src src

RUN ./mvnw package -DskipTests
RUN mkdir -p target/dependency && (cd target/dependency; jar -xf ../*.jar)


#### Stage 2: A minimal docker image with command to run the app
FROM eclipse-temurin:17-jdk-alpine

ARG DEPENDENCY=/app/target/dependency

COPY --from=build ${DEPENDENCY}/BOOT-INF/lib /app/lib
COPY --from=build ${DEPENDENCY}/META-INF /app/META-INF
COPY --from=build ${DEPENDENCY}/BOOT-INF/classes /app

#ENTRYPOINT ["sh", "-c", "java $JAVA_OPTS -cp app:app/lib/* com.jumpstart.music.MusicApplication"]
ENTRYPOINT ["java", "-cp","app:app/lib/*","com.jumpstart.music.MusicApplication"]
